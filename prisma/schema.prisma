datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String      @id
  name      String
  email     String      @unique
  createdAt DateTime    @default(now())
  status    Boolean     @default(false)
  verifyId  Int?        @unique
  verify    Verify?     @relation(fields: [verifyId], references: [id])
  discord   Discord?
  userRoles UserRole[]
  userTeams UserTeam[]
}

model Discord {
  discordUserId String @id
  discordName   String
  avatar        String?
  userId        String @unique
  user          User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Team {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  createdAt DateTime   @default(now())
  userTeams UserTeam[]
}

model Role {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  label     String
  createdAt DateTime   @default(now())
  userRoles UserRole[]
}

model UserRole {
  userId String
  roleId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
}

model UserTeam {
  userId String
  teamId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)

  @@id([userId, teamId])
}

model Verify {
  id        Int     @id @default(autoincrement())
  email     Boolean @default(false)
  emailCode String
  teamCode  String
  user      User?
}
